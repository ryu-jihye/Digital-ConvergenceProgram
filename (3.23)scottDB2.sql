SET SERVEROUTPUT ON;
BEGIN
DBMS_OUTPUT.PUT_LINE('Hello, PL/SQL');
END;

-- 기본 변수 선언과 사용
--변수이름 자료향=값 또는 표현식

DECLARE
    V_EMPNO NUMBER(4):=7788;
    V_ENAME VARCHAR(10);
BEGIN
    V_ENAME:='CONAN';
    DBMS_OUTPUT.PUT_LINE('V_EMPNO: ' || V_EMPNO);
    DBMS_OUTPUT.PUT_LINE('V_ENAME: ' || V_ENAME);
END;

--상수 정의하기
--변수이름 CONSTANT 자료형:= 값 또는 표현식;
DECLARE
    V_TAX CONSTANT NUMBER(1):=5;
BEGIN
    DBMS_OUTPUT.PUT_LINE('V_TAX:'||V_TAX);
END;

--변수의 기본값 정의하기
--변수 이름 자료형 DEFAULT 값 또는 표현식;
DECLARE
    V_DEPTNO NUMBER(2) DEFAULT 10;
BEGIN
    DBMS_OUTPUT.PUT_LINE('V_DEPTNO:' || V_DEPTNO);
END;

--변수에 NULL값 저장막기
--변수이름 자료형 NOT NULL : DEFAULT값 또는 표현식;
DECLARE
    V_DEPTNO NUMBER(2) NOT NULL:=10;
BEGIN
    DBMS_OUTPUT.PUT_LINE('V_DETPNO :' || V_DEPTNO);
END;

--변수의 자료형(1)
DECLARE
    V_DEPTNO DEPT.DEPTNO%TYPE:=50;
BEGIN
    DBMS_OUTPUT.PUT_LINE('V_DEPTNO:' || V_DEPTNO);
END;

--변수의 자료형(2)
SELECT * FROM DEPT;

DECLARE
    V_DEPT_ROW DEPT%ROWTYPE;
BEGIN
    SELECT DEPTNO, DNAME, LOC INTO V_DEPT_ROW
    FROM DEPT
    WHERE DEPTNO = 40;
    DBMS_OUTPUT.PUT_LINE('DEPTNO:' || V_DEPT_ROW.DEPTNO);
    DBMS_OUTPUT.PUT_LINE('DNAME:' || V_DEPT_ROW.DNAME);
    DBMS_OUTPUT.PUT_LINE('LOC:' || V_DEPT_ROW.LOC);
END;

--CASE조건문
DECLARE
    ismale NUMBER(1);
BEGIN
    ismale:=&성별;
    
    CASE ismale
        WHEN 1 THEN DBMS_OUTPUT.PUT_LINE('남자');
        WHEN 2 THEN DBMS_OUTPUT.PUT_LINE('여자');
        ELSE DBMS_OUTPUT.PUT_LINE('Third Thing');
    END CASE;
END;

--반복(LOOP)
DECLARE
    i NUMBER:=0;
BEGIN
    LOOP
    DBMS_OUTPUT.PUT_LINE(i);
    IF i>10 THEN
        EXIT;
    END IF;
    i:=i+1;
    END LOOP;
END;

--WHILE
DECLARE
    i NUMBER:=0;
BEGIN
    WHILE i<10 LOOP
    DBMS_OUTPUT.PUT_LINE(i);
    i:=i+1;
    END LOOP;
END;

--FOR
DECLARE
    i NUMBER:=0;
BEGIN
    FOR i IN REVERSE 1..10 LOOP
    DBMS_OUTPUT.PUT_LINE(i);
    END LOOP;
END;

--예외처리
DECLARE
    V_NUM NUMBER;
BEGIN
    V_NUM:=10/&분모;
EXCEPTION
    WHEN ZERO_DIVIDE THEN
    DBMS_OUTPUT.PUT_LINE('0이외의 다른 값을 입력하시오');
    WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE('딴 오류 발생...');
END;

EXCEPTION
    WHEN exc_name1 THEN statement1
    WHEN exc_name2 OR exc_name3 THEN statement2
    WHEN OTHERS THEN statement3
END;

CREATE TABLE MEMBERS (
MD VARCHAR2(10),
PWD NUMBER,
NAME VARCHAR2(10),
PHONE VARCHAR2(20)
);

--DROP TABLE MEMBERS;
DESC MEMBERS;

INSERT INTO MEMBERS
VALUES('CONAN', 1111, '코난', '010-1111-1111');
INSERT INTO MEMBERS
VALUES('ROSE', 2222, '장미', '010-2222-2222');
INSERT INTO MEMBERS
VALUES('RAN', 3333, '미란', '010-3333-3333');
INSERT INTO MEMBERS
VALUES('DETECTIVE', 4444, '유탐정', '010-4444-4444');
INSERT INTO MEMBERS
VALUES('KID', 5555, '키드', '010-5555-5555');

--DELETE FROM MEMBERS
--WHERE MD='ROSE';
SELECT * FROM MEMBERS;

COMMIT;

--DECLARE
--    V_MD VARCHAR(50);
--    V_PWD VARCHAR(50);
--    CURSOR CUR_MEMBER US SELECT MD, PWD FROM MEMBERS;
--BEGIN
--    OPEN CUR_MEMBER;
--    FETCH CUR_MEMBER INTO V_MD, V_PWD;
--    DBMS_OUTPUT.PUT_LINE(V_MD);
--    CLOSE CUR_MEMBER;
--END;